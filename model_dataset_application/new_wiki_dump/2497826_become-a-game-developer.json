{
  "title":"How to Become a Game Developer",
  "url":"https://www.wikihow.com/Become-a-Game-Developer",
  "category_hierarchy":[
    "Hobbies and Crafts",
    "Games",
    "Creating Games"
  ],
  "methods":[
    {
      "name":"Learning How to Program",
      "steps":[
        {
          "headline":"Decide between school and self-taught.",
          "description":"Expect employers to value technical know-how most of all. So don\u2019t fret if the cost of tuition for higher education is beyond your means, because a degree isn\u2019t strictly necessary to find employment. At the same time, though, recognize that technical proficiency coupled with a degree will probably make you stand out over other candidates. Whichever route you choose, put all your emphasis on becoming a proficient programmer. Coasting will only leave you ill-equipped for interviews and the job in question."
        },
        {
          "headline":"Choose your major carefully.",
          "description":"If you decide on college, be wary about specialized degrees in game programming. Expect these to cover all of the many different aspects of game programming in a relatively short amount of time. Favor a major in Computer Science instead if you aren\u2019t already proficient in the subject. Each aspect of game programming takes a lot of time to master. Studying computer science in depth is more likely to equip you with the necessary skills to tackle each one, even if those skills aren\u2019t directly applied to games during the course of your studies. If you do consider a specialized degree, research the people who are teaching it. Professors who understand the concepts of game programming, but who have never worked in the field themselves, may not be the best people to learn from."
        },
        {
          "headline":"Learn computer languages.",
          "description":"Whether you go to school or teach yourself, aim to master at least one computer language. Focus on C++ to increase your chances of being hired, since this is used the most often in game programming. Other languages that are helpful include:\nActionscript\nAssembly\nC\nJava\nObjective-C\nPython\nSwift"
        },
        {
          "headline":"Design your own game.",
          "description":"Remember: the best way to learn how to do something is to actually do it! Once you learn how to code in computer languages, apply your skills. Build a game from the ground up to grow more familiar with the whole process, from start to finish. As you do, you should:\nKeep it basic. Don\u2019t worry about revolutionizing games as you know it. To make an analogy, write a simple short story, not James Joyce\u2019s Ulysses. Copy another game if needed. The purpose here is to learn, not to be original. Borrow another game\u2019s concept and build on it if you\u2019re stuck for ideas. Do everything yourself. Don\u2019t rely on using outside vector/math libraries. Make all aspects a DIY project in order to increase your proficiency. Finish it! You want to grow familiar with the whole process, so follow through all the way to the end. Don\u2019t abandon it just because you\u2019ve already finished your favorite aspect of programming."
        },
        {
          "headline":"Narrow down your focus.",
          "description":"Remember: as a professional game developer, you\u2019ll be part of a team tasked with specific aspects. So as you learn to code and build your own games, decide on which areas you want to concentrate on when hired. Once you do, continue to work on personal projects and place more attention to these areas. Titles and departments may vary from company to company, but generally programming is divided between: artificial intelligence; animation; audio; build systems; engines; gameplay; networking; physics; rendering; tools; and user interface."
        }
      ]
    },
    {
      "name":"Finding Work",
      "steps":[
        {
          "headline":"Intern first.",
          "description":"Before you apply for a paid position, put in some time with an unpaid one. Search online or through your school for open internships. Gain working experience to bolster your resume when it comes time for the job hunt. Other benefits of an internship include:\nReferences from industry insiders. Extended contacts with people in the field. More familiarity with the day-to-day reality of the job."
        },
        {
          "headline":"Have demos ready.",
          "description":"Since you don\u2019t have any published games to point to, prepare some examples on your own to submit along with your cover letter and resume. Continue developing personal projects and publish them online in a public Git repository where employers can check them out. Don\u2019t worry about creating whole games. Instead, develop short-and-sweet demos that highlight the specific areas that you want to specialize in. Whatever your demo might be, make it perfect. Don\u2019t try to wow interviewers with something overly complex if you can\u2019t get it right. Showcase something simple and flawless instead."
        },
        {
          "headline":"Focus on start-ups at first.",
          "description":"This isn\u2019t to say that you shouldn\u2019t apply to positions with established, well-known, successful companies. However, such companies are better situated to offer higher pay and possibly more job security, so expect your competition here to be pretty fierce. Concentrate instead on newer, smaller companies, who, like you, probably have to be less choosy. This isn\u2019t a guarantee that you\u2019ll get hired, but you\u2019re less likely to be up against programming rockstars with way more experience than you."
        },
        {
          "headline":"Research each company you apply to.",
          "description":"First of all, look for job postings on company websites. Then, after you submit an application, brush up on the company. Read their own published profile, as well as any write-ups from outside sources. Jot down any questions that occur to you so you can pose them in your interview. In addition to your technical skills, demonstrating a working knowledge of both the company and the game business at large in your interview should raise your standing among other candidates."
        },
        {
          "headline":"Network.",
          "description":"Expect to face a lot of competition for each position. Use each and every personal connection that you have with industry insiders to get a step ahead. Find out about potential openings before they\u2019re posted. Ask your contacts to provide recommendations if they have an inside track with employers. Extend your network by:\nReaching out through online forums, social media, and professional networks to meet people in the field. Staying in frequent contact with current or former classmates and professors. Attending conferences and conventions."
        },
        {
          "headline":"Make the most of failed interviews.",
          "description":"First of all, keep in mind that with so much competition, you\u2019ll probably face a lot of rejection. Accept it as a given, take it in stride, and learn from it by:\nReflecting on your interviews, resume, and demos to identify and improve weak points. Following up with a thank-you letter or email to interviewers for being considered at all. Asking for pointers on areas in which they think you need improvement."
        }
      ]
    },
    {
      "name":"Deciding If This Career is Right for You",
      "steps":[
        {
          "headline":"Love games.",
          "description":"Keep in mind that programming can be a demanding and stressful field to work in, as well as a difficult career to break into. It will require a lot of passion on your part, so take stock of just how much you have. Muster up every last drop that you can in order to succeed."
        },
        {
          "headline":"Expect a long road ahead of you.",
          "description":"Value patience and persistence. Plan on taking a few years to acquire the necessary technical know-how, either on your own or through formal education. Then, when you\u2019re ready to enter the workforce, expect a lot of competition for each opening, which means it might take a while to find work. Then, once hired, anticipate having to do a lot of grunt work before advancing to your desired position."
        },
        {
          "headline":"Don\u2019t do it for the money.",
          "description":"If you go the formal education route, bear in mind that its cost will probably exceed a game programmer\u2019s average yearly salary by a pretty hefty amount. Also keep in mind that the field lacks job security, which means you may have gaps in your employment. Again, this career definitely requires you to be passionate about it, so do it for the love, not a quick buck."
        },
        {
          "headline":"Anticipate a heavy emphasis on math.",
          "description":"Expect most, if not all, aspects of game programming to require strong math skills. If you\u2019re still in school, double down on your math courses. If you\u2019re out of school and need to brush up, definitely do so. Obviously, taking math courses is a great way to strengthen your skills. But perhaps even better for the aspiring game developer are the multitude of math games available for download. Kill two birds with one stone and explore games that you may not have otherwise sampled."
        },
        {
          "headline":"Be a team player.",
          "description":"Before you enter the field professionally, you should spend a lot of time developing programming skills on your own. But don\u2019t grow too accustomed to working solo. Once hired, expect to become one member of a much larger team. Prioritize clear communication and the ability to accept criticism as two essential skillsets."
        },
        {
          "headline":"Be flexible about location.",
          "description":"Depending on where you live, this may not be as much of an issue. But if your hometown isn\u2019t already a booming tech haven, be willing to move to where the work is. Also remember that job stability is pretty iffy, which means you may have to relocate again for a new job."
        }
      ]
    }
  ],
  "text":" Learning How to Program Decide between school and self-taught. Expect employers to value technical know-how most of all. So don\u2019t fret if the cost of tuition for higher education is beyond your means, because a degree isn\u2019t strictly necessary to find employment. At the same time, though, recognize that technical proficiency coupled with a degree will probably make you stand out over other candidates. Whichever route you choose, put all your emphasis on becoming a proficient programmer. Coasting will only leave you ill-equipped for interviews and the job in question. Choose your major carefully. If you decide on college, be wary about specialized degrees in game programming. Expect these to cover all of the many different aspects of game programming in a relatively short amount of time. Favor a major in Computer Science instead if you aren\u2019t already proficient in the subject. Each aspect of game programming takes a lot of time to master. Studying computer science in depth is more likely to equip you with the necessary skills to tackle each one, even if those skills aren\u2019t directly applied to games during the course of your studies. If you do consider a specialized degree, research the people who are teaching it. Professors who understand the concepts of game programming, but who have never worked in the field themselves, may not be the best people to learn from. Learn computer languages. Whether you go to school or teach yourself, aim to master at least one computer language. Focus on C++ to increase your chances of being hired, since this is used the most often in game programming. Other languages that are helpful include:\nActionscript\nAssembly\nC\nJava\nObjective-C\nPython\nSwift Design your own game. Remember: the best way to learn how to do something is to actually do it! Once you learn how to code in computer languages, apply your skills. Build a game from the ground up to grow more familiar with the whole process, from start to finish. As you do, you should:\nKeep it basic. Don\u2019t worry about revolutionizing games as you know it. To make an analogy, write a simple short story, not James Joyce\u2019s Ulysses. Copy another game if needed. The purpose here is to learn, not to be original. Borrow another game\u2019s concept and build on it if you\u2019re stuck for ideas. Do everything yourself. Don\u2019t rely on using outside vector/math libraries. Make all aspects a DIY project in order to increase your proficiency. Finish it! You want to grow familiar with the whole process, so follow through all the way to the end. Don\u2019t abandon it just because you\u2019ve already finished your favorite aspect of programming. Narrow down your focus. Remember: as a professional game developer, you\u2019ll be part of a team tasked with specific aspects. So as you learn to code and build your own games, decide on which areas you want to concentrate on when hired. Once you do, continue to work on personal projects and place more attention to these areas. Titles and departments may vary from company to company, but generally programming is divided between: artificial intelligence; animation; audio; build systems; engines; gameplay; networking; physics; rendering; tools; and user interface. Finding Work Intern first. Before you apply for a paid position, put in some time with an unpaid one. Search online or through your school for open internships. Gain working experience to bolster your resume when it comes time for the job hunt. Other benefits of an internship include:\nReferences from industry insiders. Extended contacts with people in the field. More familiarity with the day-to-day reality of the job. Have demos ready. Since you don\u2019t have any published games to point to, prepare some examples on your own to submit along with your cover letter and resume. Continue developing personal projects and publish them online in a public Git repository where employers can check them out. Don\u2019t worry about creating whole games. Instead, develop short-and-sweet demos that highlight the specific areas that you want to specialize in. Whatever your demo might be, make it perfect. Don\u2019t try to wow interviewers with something overly complex if you can\u2019t get it right. Showcase something simple and flawless instead. Focus on start-ups at first. This isn\u2019t to say that you shouldn\u2019t apply to positions with established, well-known, successful companies. However, such companies are better situated to offer higher pay and possibly more job security, so expect your competition here to be pretty fierce. Concentrate instead on newer, smaller companies, who, like you, probably have to be less choosy. This isn\u2019t a guarantee that you\u2019ll get hired, but you\u2019re less likely to be up against programming rockstars with way more experience than you. Research each company you apply to. First of all, look for job postings on company websites. Then, after you submit an application, brush up on the company. Read their own published profile, as well as any write-ups from outside sources. Jot down any questions that occur to you so you can pose them in your interview. In addition to your technical skills, demonstrating a working knowledge of both the company and the game business at large in your interview should raise your standing among other candidates. Network. Expect to face a lot of competition for each position. Use each and every personal connection that you have with industry insiders to get a step ahead. Find out about potential openings before they\u2019re posted. Ask your contacts to provide recommendations if they have an inside track with employers. Extend your network by:\nReaching out through online forums, social media, and professional networks to meet people in the field. Staying in frequent contact with current or former classmates and professors. Attending conferences and conventions. Make the most of failed interviews. First of all, keep in mind that with so much competition, you\u2019ll probably face a lot of rejection. Accept it as a given, take it in stride, and learn from it by:\nReflecting on your interviews, resume, and demos to identify and improve weak points. Following up with a thank-you letter or email to interviewers for being considered at all. Asking for pointers on areas in which they think you need improvement. Deciding If This Career is Right for You Love games. Keep in mind that programming can be a demanding and stressful field to work in, as well as a difficult career to break into. It will require a lot of passion on your part, so take stock of just how much you have. Muster up every last drop that you can in order to succeed. Expect a long road ahead of you. Value patience and persistence. Plan on taking a few years to acquire the necessary technical know-how, either on your own or through formal education. Then, when you\u2019re ready to enter the workforce, expect a lot of competition for each opening, which means it might take a while to find work. Then, once hired, anticipate having to do a lot of grunt work before advancing to your desired position. Don\u2019t do it for the money. If you go the formal education route, bear in mind that its cost will probably exceed a game programmer\u2019s average yearly salary by a pretty hefty amount. Also keep in mind that the field lacks job security, which means you may have gaps in your employment. Again, this career definitely requires you to be passionate about it, so do it for the love, not a quick buck. Anticipate a heavy emphasis on math. Expect most, if not all, aspects of game programming to require strong math skills. If you\u2019re still in school, double down on your math courses. If you\u2019re out of school and need to brush up, definitely do so. Obviously, taking math courses is a great way to strengthen your skills. But perhaps even better for the aspiring game developer are the multitude of math games available for download. Kill two birds with one stone and explore games that you may not have otherwise sampled. Be a team player. Before you enter the field professionally, you should spend a lot of time developing programming skills on your own. But don\u2019t grow too accustomed to working solo. Once hired, expect to become one member of a much larger team. Prioritize clear communication and the ability to accept criticism as two essential skillsets. Be flexible about location. Depending on where you live, this may not be as much of an issue. But if your hometown isn\u2019t already a booming tech haven, be willing to move to where the work is. Also remember that job stability is pretty iffy, which means you may have to relocate again for a new job.",
  "tyn_model":[
    "computer science",
    "computer languages",
    "programmer",
    "computer language",
    "objective-c\npython",
    "programming",
    "artificial intelligence",
    "game programmer"
  ],
  "tyn_section":[

  ]
}