{
    "title": "How to Write a C++ Program That Determines if a Word Is a Palindrome or Not",
    "url": "https://www.wikihow.com/Write-a-C%2B%2B-Program-That-Determines-if-a-Word-Is-a-Palindrome-or-Not",
    "category_hierarchy": [
        "Computers and Electronics",
        "Software",
        "Programming"
    ],
    "methods": [
        {
            "name": "Setting Up",
            "steps": [
                {
                    "headline": "Open the text editor you will use to write the program.",
                    "description": "You may use a simple word processor such as Notepad to write this code, but you will not get the added benefits of error warnings or automatic formatting of the code for readability."
                },
                {
                    "headline": "Type the preprocessor directives that add the necessary libraries to your program.",
                    "description": "These statements tell the computer that your program will use two pre-existing libraries that are already built-in to C++. The iostream library contains code for input and output to the console. The string library contains code for creating and manipulating text strings. Including these libraries makes your programming life easier because you are taking advantage of the resources already available to you. #include<iostream>\n#include<string>"
                },
                {
                    "headline": "Type the \u201cusing\u201d statement for the namespace you will use (standard namespace).",
                    "description": "The text you type should appear on a new line. This text will inform the computer that you are using some abbreviated conventions for certain text that will appear later. For example, later on in this process, instead of typing \u201cstd::cout\u201d, you will only have to type \u201ccout\u201d. Do not type the comments (statements that follow two forward slashes) as you proceed with this process. #include<iostream>\n#include<string>\n\n//new text appears below this line\nusing namespace std;"
                }
            ]
        },
        {
            "name": "Building the Program",
            "steps": [
                {
                    "headline": "Type the main function.",
                    "description": "This program will only have one function, the main function, which is a part of every C++ program. The right curly brace will automatically appear on most text editors after you type the left one. The same is true of all symbols with an \"opening\" and \"closing\" case (such as parenthesis, \"()\", brackets, \"[]\", and curly braces, \"{}\"). All of the code you type within the main function is automatically indented to indicate its placement and improve readability. Make sure the rest of the code you type is within these two curly braces. #include<iostream>\n#include<string>\n\nusing namespace std;\n\n//new text begins here\nint main()\n{\n\n}\n//new text ends here"
                },
                {
                    "headline": "Declare the necessary variables.",
                    "description": "Within the curly braces of the main function, type the new text shown below. This text establishes \"str\", \"length\", and \"isPalindrome\" as variables which store a text string, integer, and Boolean value respectively. The variable \u201cstr\u201d will store the word that may or may not be a palindrome. The variable \u201clength\u201d will store the number of letters in the word. The variable \u201cisPalindrome\u201d will store whether or not the word is a palindrome. For the purpose of this program, we first assume the word is a palindrome, and then examine it to see if it is not a palindrome. If it is not a palindrome, we will change the value of \u201cisPalindrome\u201d to false. #include<iostream>\n#include<string>\n\nusing namespace std;\n\nint main()\n{\n//new text begins here\n    string str;\n    int length;\n    bool isPalindrome = true;\n//new text ends here\n}"
                },
                {
                    "headline": "Type the prompt to the user asking for input.",
                    "description": "This text will inform the user to enter a word. #include<iostream>\n#include<string>\n\nusing namespace std;\n\nint main()\n{\n    string str;\n    int length;\n    bool isPalindrome = true;\n\n//new text begins here\n    cout << \"Enter a word: \";\n//new text ends here\n}"
                },
                {
                    "headline": "Type the code to get input from the user.",
                    "description": "This text will take input from the user and put it in the variable \u201cstr\u201d you created earlier. #include<iostream>\n#include<string>\n\nusing namespace std;\n\nint main()\n{\n    string str;\n    int length;\n    bool isPalindrome = true;\n\n    cout << \"Enter a word: \";\n\n//new text begins here\n    getline(cin, str);\n//new text ends here\n}"
                },
                {
                    "headline": "Type text to store the length of the word entered by the user in the variable \u201clength\u201d.",
                    "description": "The length of the word is needed so the computer knows when to stop looking through the letters in the word. #include<iostream>\n#include<string>\n\nusing namespace std;\n\nint main()\n{\n    string str;\n    int length;\n    bool isPalindrome = true;\n\n    cout << \"Enter a word: \";\n\n    getline(cin, str);\n\n//new  text begins here\n    length = str.length();\n//new text ends here\n}"
                },
                {
                    "headline": "Create a loop to examine the word letter by letter by typing the new text shown below.",
                    "description": "Put as simply as possible, this text creates a loop that will examine each letter with its corresponding mirror letter to see if they match. Since the number of examinations is half the size of the word, we divide the length by 2 in the code. When you type the left curly brace, the right one should automatically appear again. The next line of code should be typed within these new curly braces. #include<iostream>\n#include<string>\n\nusing namespace std;\n\nint main()\n{\n    string str;\n    int length;\n    bool isPalindrome = true;\n\n    cout << \"Enter a word: \";\n\n    getline(cin, str);\n\n    length = str.length();\n\n//new text begins here\n    for (int i = 0; i < (length / 2); i++)\n    {\n    }\n//new text ends here\n}"
                },
                {
                    "headline": "Type the comparison statement within the curly braces you just typed.",
                    "description": "This statement carries out comparisons. A given letter, denoted \u201ci\", is compared with the letter in its mirrored position in the word. For example, in the word \u201cmadam\u201d, the two m's will be compared, then the two a's, and so on. #include<iostream>\n#include<string>\n\nusing namespace std;\n\nint main()\n{\n    string str;\n    int length;\n    bool isPalindrome = true;\n\n    cout << \"Enter a word: \";\n\n    getline(cin, str);\n\n    length = str.length();\n\n    for (int i = 0; i < (length / 2); i++)\n    {\n//new text begins here\n        if (str[i] != str[(length - 1) - i])\n            isPalindrome = false;\n//new text ends here\n    }\n}"
                },
                {
                    "headline": "Type the statement to test the value of \u201cisPalindrome\u201d.",
                    "description": "If the word in question is a palindrome, the variable \u201cisPalindrome\u201d will still be true. Otherwise, it will be false. This \u201ccout\u201d statement displays the \"true\" instance to the user. #include<iostream>\n#include<string>\n\nusing namespace std;\n\nint main()\n{\n    string str;\n    int length;\n    bool isPalindrome = true;\n\n    cout << \"Enter a word: \";\n\n    getline(cin, str);\n\n    length = str.length();\n\n    for (int i = 0; i < (length / 2); i++)\n    {\n        if (str[i] != str[(length - 1) - i])\n            isPalindrome = false;\n    }\n\n//new text begins here\n    if (isPalindrome == true)\n        cout << str << \" is a palindrome\" << endl;\n//new text ends here\n}"
                },
                {
                    "headline": "Type the code to account for when the word is not a palindrome.",
                    "description": "If the word in question is not a palindrome, the variable \u201cisPalindrome\u201d will have a new value of \u201cfalse\u201d and the \u201celse\u201d statement will execute, displaying this fact to the user. #include<iostream>\n#include<string>\n\nusing namespace std;\n\nint main()\n{\n    string str;\n    int length;\n    bool isPalindrome = true;\n\n    cout << \"Enter a word: \";\n\n    getline(cin, str);\n\n    length = str.length();\n\n    for (int i = 0; i < (length / 2); i++)\n    {\n        if (str[i] != str[(length - 1) - i])\n            isPalindrome = false;\n    }\n\n    if (isPalindrome == true)\n        cout << str << \" is a palindrome\" << endl;\n\n//new text begins here\n    else\n        cout << str << \" is not a palindrome\" << endl;\n//new text ends here\n}"
                }
            ]
        },
        {
            "name": "Finishing Up",
            "steps": [
                {
                    "headline": "Type the return statement.",
                    "description": "This statement tells the computer that the program executed correctly. Make sure the final curly brace from the main function appears after this statement. If you are using a standard text editor, the indentation and spacing will happen automatically within the curly braces and this will be less likely to be a potential problem. #include<iostream>\n#include<string>\n\nusing namespace std;\n\nint main()\n{\n    string str;\n    int length;\n    bool isPalindrome = true;\n\n    cout << \"Enter a word: \";\n\n    getline(cin, str);\n\n    length = str.length();\n\n    for (int i = 0; i < (length / 2); i++)\n    {\n        if (str[i] != str[(length - 1) - i])\n            isPalindrome = false;\n    }\n\n    if (isPalindrome == true)\n        cout << str << \" is a palindrome\" << endl;\n\n    else\n        cout << str << \" is not a palindrome\" << endl;\n\n//new text begins here\n    return 0;\n//new text ends here\n}"
                },
                {
                    "headline": "Verify your code.",
                    "description": "You may run your code on your software to see that it works. How this is carried out will vary depending on your software."
                }
            ]
        }
    ],
    "tyn": [
        "A computer with a text editor to write the program"
    ],
    "text": " Setting Up Open the text editor you will use to write the program. You may use a simple word processor such as Notepad to write this code, but you will not get the added benefits of error warnings or automatic formatting of the code for readability. Type the preprocessor directives that add the necessary libraries to your program. These statements tell the computer that your program will use two pre-existing libraries that are already built-in to C++. The iostream library contains code for input and output to the console. The string library contains code for creating and manipulating text strings. Including these libraries makes your programming life easier because you are taking advantage of the resources already available to you. #include<iostream>\n#include<string> Type the \u201cusing\u201d statement for the namespace you will use (standard namespace). The text you type should appear on a new line. This text will inform the computer that you are using some abbreviated conventions for certain text that will appear later. For example, later on in this process, instead of typing \u201cstd::cout\u201d, you will only have to type \u201ccout\u201d. Do not type the comments (statements that follow two forward slashes) as you proceed with this process. #include<iostream>\n#include<string>\n\n//new text appears below this line\nusing namespace std; Building the Program Type the main function. This program will only have one function, the main function, which is a part of every C++ program. The right curly brace will automatically appear on most text editors after you type the left one. The same is true of all symbols with an \"opening\" and \"closing\" case (such as parenthesis, \"()\", brackets, \"[]\", and curly braces, \"{}\"). All of the code you type within the main function is automatically indented to indicate its placement and improve readability. Make sure the rest of the code you type is within these two curly braces. #include<iostream>\n#include<string>\n\nusing namespace std;\n\n//new text begins here\nint main()\n{\n\n}\n//new text ends here Declare the necessary variables. Within the curly braces of the main function, type the new text shown below. This text establishes \"str\", \"length\", and \"isPalindrome\" as variables which store a text string, integer, and Boolean value respectively. The variable \u201cstr\u201d will store the word that may or may not be a palindrome. The variable \u201clength\u201d will store the number of letters in the word. The variable \u201cisPalindrome\u201d will store whether or not the word is a palindrome. For the purpose of this program, we first assume the word is a palindrome, and then examine it to see if it is not a palindrome. If it is not a palindrome, we will change the value of \u201cisPalindrome\u201d to false. #include<iostream>\n#include<string>\n\nusing namespace std;\n\nint main()\n{\n//new text begins here\n    string str;\n    int length;\n    bool isPalindrome = true;\n//new text ends here\n} Type the prompt to the user asking for input. This text will inform the user to enter a word. #include<iostream>\n#include<string>\n\nusing namespace std;\n\nint main()\n{\n    string str;\n    int length;\n    bool isPalindrome = true;\n\n//new text begins here\n    cout << \"Enter a word: \";\n//new text ends here\n} Type the code to get input from the user. This text will take input from the user and put it in the variable \u201cstr\u201d you created earlier. #include<iostream>\n#include<string>\n\nusing namespace std;\n\nint main()\n{\n    string str;\n    int length;\n    bool isPalindrome = true;\n\n    cout << \"Enter a word: \";\n\n//new text begins here\n    getline(cin, str);\n//new text ends here\n} Type text to store the length of the word entered by the user in the variable \u201clength\u201d. The length of the word is needed so the computer knows when to stop looking through the letters in the word. #include<iostream>\n#include<string>\n\nusing namespace std;\n\nint main()\n{\n    string str;\n    int length;\n    bool isPalindrome = true;\n\n    cout << \"Enter a word: \";\n\n    getline(cin, str);\n\n//new  text begins here\n    length = str.length();\n//new text ends here\n} Create a loop to examine the word letter by letter by typing the new text shown below. Put as simply as possible, this text creates a loop that will examine each letter with its corresponding mirror letter to see if they match. Since the number of examinations is half the size of the word, we divide the length by 2 in the code. When you type the left curly brace, the right one should automatically appear again. The next line of code should be typed within these new curly braces. #include<iostream>\n#include<string>\n\nusing namespace std;\n\nint main()\n{\n    string str;\n    int length;\n    bool isPalindrome = true;\n\n    cout << \"Enter a word: \";\n\n    getline(cin, str);\n\n    length = str.length();\n\n//new text begins here\n    for (int i = 0; i < (length / 2); i++)\n    {\n    }\n//new text ends here\n} Type the comparison statement within the curly braces you just typed. This statement carries out comparisons. A given letter, denoted \u201ci\", is compared with the letter in its mirrored position in the word. For example, in the word \u201cmadam\u201d, the two m's will be compared, then the two a's, and so on. #include<iostream>\n#include<string>\n\nusing namespace std;\n\nint main()\n{\n    string str;\n    int length;\n    bool isPalindrome = true;\n\n    cout << \"Enter a word: \";\n\n    getline(cin, str);\n\n    length = str.length();\n\n    for (int i = 0; i < (length / 2); i++)\n    {\n//new text begins here\n        if (str[i] != str[(length - 1) - i])\n            isPalindrome = false;\n//new text ends here\n    }\n} Type the statement to test the value of \u201cisPalindrome\u201d. If the word in question is a palindrome, the variable \u201cisPalindrome\u201d will still be true. Otherwise, it will be false. This \u201ccout\u201d statement displays the \"true\" instance to the user. #include<iostream>\n#include<string>\n\nusing namespace std;\n\nint main()\n{\n    string str;\n    int length;\n    bool isPalindrome = true;\n\n    cout << \"Enter a word: \";\n\n    getline(cin, str);\n\n    length = str.length();\n\n    for (int i = 0; i < (length / 2); i++)\n    {\n        if (str[i] != str[(length - 1) - i])\n            isPalindrome = false;\n    }\n\n//new text begins here\n    if (isPalindrome == true)\n        cout << str << \" is a palindrome\" << endl;\n//new text ends here\n} Type the code to account for when the word is not a palindrome. If the word in question is not a palindrome, the variable \u201cisPalindrome\u201d will have a new value of \u201cfalse\u201d and the \u201celse\u201d statement will execute, displaying this fact to the user. #include<iostream>\n#include<string>\n\nusing namespace std;\n\nint main()\n{\n    string str;\n    int length;\n    bool isPalindrome = true;\n\n    cout << \"Enter a word: \";\n\n    getline(cin, str);\n\n    length = str.length();\n\n    for (int i = 0; i < (length / 2); i++)\n    {\n        if (str[i] != str[(length - 1) - i])\n            isPalindrome = false;\n    }\n\n    if (isPalindrome == true)\n        cout << str << \" is a palindrome\" << endl;\n\n//new text begins here\n    else\n        cout << str << \" is not a palindrome\" << endl;\n//new text ends here\n} Finishing Up Type the return statement. This statement tells the computer that the program executed correctly. Make sure the final curly brace from the main function appears after this statement. If you are using a standard text editor, the indentation and spacing will happen automatically within the curly braces and this will be less likely to be a potential problem. #include<iostream>\n#include<string>\n\nusing namespace std;\n\nint main()\n{\n    string str;\n    int length;\n    bool isPalindrome = true;\n\n    cout << \"Enter a word: \";\n\n    getline(cin, str);\n\n    length = str.length();\n\n    for (int i = 0; i < (length / 2); i++)\n    {\n        if (str[i] != str[(length - 1) - i])\n            isPalindrome = false;\n    }\n\n    if (isPalindrome == true)\n        cout << str << \" is a palindrome\" << endl;\n\n    else\n        cout << str << \" is not a palindrome\" << endl;\n\n//new text begins here\n    return 0;\n//new text ends here\n} Verify your code. You may run your code on your software to see that it works. How this is carried out will vary depending on your software.",
    "sentences": [
        " Setting Up Open the text editor you will use to write the program.",
        "You may use a simple word processor such as Notepad to write this code, but you will not get the added benefits of error warnings or automatic formatting of the code for readability.",
        "Type the preprocessor directives that add the necessary libraries to your program.",
        "These statements tell the computer that your program will use two pre-existing libraries that are already built-in to C++.",
        "The iostream library contains code for input and output to the console.",
        "The string library contains code for creating and manipulating text strings.",
        "Including these libraries makes your programming life easier because you are taking advantage of the resources already available to you.",
        "#include<iostream>\n#include<string> Type the \u201cusing\u201d statement for the namespace you will use (standard namespace).",
        "The text you type should appear on a new line.",
        "This text will inform the computer that you are using some abbreviated conventions for certain text that will appear later.",
        "For example, later on in this process, instead of typing \u201cstd::cout\u201d, you will only have to type \u201ccout\u201d.",
        "Do not type the comments (statements that follow two forward slashes) as you proceed with this process.",
        "#include<iostream>\n#include<string>\n\n//new text appears below this line\nusing namespace std; Building the Program Type the main function.",
        "This program will only have one function, the main function, which is a part of every C++ program.",
        "The right curly brace will automatically appear on most text editors after you type the left one.",
        "The same is true of all symbols with an \"opening\" and \"closing\" case (such as parenthesis, \"()\", brackets, \"[]\", and curly braces, \"{}\").",
        "All of the code you type within the main function is automatically indented to indicate its placement and improve readability.",
        "Make sure the rest of the code you type is within these two curly braces.",
        "#include<iostream>\n#include<string>\n\nusing namespace std;\n\n//new text begins here\nint main()\n{\n\n}\n//new text ends here Declare the necessary variables.",
        "Within the curly braces of the main function, type the new text shown below.",
        "This text establishes \"str\", \"length\", and \"isPalindrome\" as variables which store a text string, integer, and Boolean value respectively.",
        "The variable \u201cstr\u201d will store the word that may or may not be a palindrome.",
        "The variable \u201clength\u201d will store the number of letters in the word.",
        "The variable \u201cisPalindrome\u201d will store whether or not the word is a palindrome.",
        "For the purpose of this program, we first assume the word is a palindrome, and then examine it to see if it is not a palindrome.",
        "If it is not a palindrome, we will change the value of \u201cisPalindrome\u201d to false.",
        "#include<iostream>\n#include<string>\n\nusing namespace std;\n\nint main()\n{\n//new text begins here\n    string str;\n    int length;\n    bool isPalindrome = true;\n//new text ends here\n} Type the prompt to the user asking for input.",
        "This text will inform the user to enter a word.",
        "#include<iostream>\n#include<string>\n\nusing namespace std;\n\nint main()\n{\n    string str;\n    int length;\n    bool isPalindrome = true;\n\n//new text begins here\n    cout << \"Enter a word: \";\n//new text ends here\n} Type the code to get input from the user.",
        "This text will take input from the user and put it in the variable \u201cstr\u201d you created earlier.",
        "#include<iostream>\n#include<string>\n\nusing namespace std;\n\nint main()\n{\n    string str;\n    int length;\n    bool isPalindrome = true;\n\n    cout << \"Enter a word: \";\n\n//new text begins here\n    getline(cin, str);\n//new text ends here\n} Type text to store the length of the word entered by the user in the variable \u201clength\u201d.",
        "The length of the word is needed so the computer knows when to stop looking through the letters in the word.",
        "#include<iostream>\n#include<string>\n\nusing namespace std;\n\nint main()\n{\n    string str;\n    int length;\n    bool isPalindrome = true;\n\n    cout << \"Enter a word: \";\n\n    getline(cin, str);\n\n//new  text begins here\n    length = str.length();\n//new text ends here\n} Create a loop to examine the word letter by letter by typing the new text shown below.",
        "Put as simply as possible, this text creates a loop that will examine each letter with its corresponding mirror letter to see if they match.",
        "Since the number of examinations is half the size of the word, we divide the length by 2 in the code.",
        "When you type the left curly brace, the right one should automatically appear again.",
        "The next line of code should be typed within these new curly braces.",
        "#include<iostream>\n#include<string>\n\nusing namespace std;\n\nint main()\n{\n    string str;\n    int length;\n    bool isPalindrome = true;\n\n    cout << \"Enter a word: \";\n\n    getline(cin, str);\n\n    length = str.length();\n\n//new text begins here\n    for (int i = 0; i < (length / 2); i++)\n    {\n    }\n//new text ends here\n} Type the comparison statement within the curly braces you just typed.",
        "This statement carries out comparisons.",
        "A given letter, denoted \u201ci\", is compared with the letter in its mirrored position in the word.",
        "For example, in the word \u201cmadam\u201d, the two m's will be compared, then the two a's, and so on.",
        "#include<iostream>\n#include<string>\n\nusing namespace std;\n\nint main()\n{\n    string str;\n    int length;\n    bool isPalindrome = true;\n\n    cout << \"Enter a word: \";\n\n    getline(cin, str);\n\n    length = str.length();\n\n    for (int i = 0; i < (length / 2); i++)\n    {\n//new text begins here\n        if (str[i] != str[(length - 1) - i])\n            isPalindrome = false;\n//new text ends here\n    }\n} Type the statement to test the value of \u201cisPalindrome\u201d.",
        "If the word in question is a palindrome, the variable \u201cisPalindrome\u201d will still be true.",
        "Otherwise, it will be false.",
        "This \u201ccout\u201d statement displays the \"true\" instance to the user.",
        "#include<iostream>\n#include<string>\n\nusing namespace std;\n\nint main()\n{\n    string str;\n    int length;\n    bool isPalindrome = true;\n\n    cout << \"Enter a word: \";\n\n    getline(cin, str);\n\n    length = str.length();\n\n    for (int i = 0; i < (length / 2); i++)\n    {\n        if (str[i] != str[(length - 1) - i])\n            isPalindrome = false;\n    }\n\n//new text begins here\n    if (isPalindrome == true)\n        cout << str << \" is a palindrome\" << endl;\n//new text ends here\n} Type the code to account for when the word is not a palindrome.",
        "If the word in question is not a palindrome, the variable \u201cisPalindrome\u201d will have a new value of \u201cfalse\u201d and the \u201celse\u201d statement will execute, displaying this fact to the user.",
        "#include<iostream>\n#include<string>\n\nusing namespace std;\n\nint main()\n{\n    string str;\n    int length;\n    bool isPalindrome = true;\n\n    cout << \"Enter a word: \";\n\n    getline(cin, str);\n\n    length = str.length();\n\n    for (int i = 0; i < (length / 2); i++)\n    {\n        if (str[i] != str[(length - 1) - i])\n            isPalindrome = false;\n    }\n\n    if (isPalindrome == true)\n        cout << str << \" is a palindrome\" << endl;\n\n//new text begins here\n    else\n        cout << str << \" is not a palindrome\" << endl;\n//new text ends here\n} Finishing Up Type the return statement.",
        "This statement tells the computer that the program executed correctly.",
        "Make sure the final curly brace from the main function appears after this statement.",
        "If you are using a standard text editor, the indentation and spacing will happen automatically within the curly braces and this will be less likely to be a potential problem.",
        "#include<iostream>\n#include<string>\n\nusing namespace std;\n\nint main()\n{\n    string str;\n    int length;\n    bool isPalindrome = true;\n\n    cout << \"Enter a word: \";\n\n    getline(cin, str);\n\n    length = str.length();\n\n    for (int i = 0; i < (length / 2); i++)\n    {\n        if (str[i] != str[(length - 1) - i])\n            isPalindrome = false;\n    }\n\n    if (isPalindrome == true)\n        cout << str << \" is a palindrome\" << endl;\n\n    else\n        cout << str << \" is not a palindrome\" << endl;\n\n//new text begins here\n    return 0;\n//new text ends here\n} Verify your code.",
        "You may run your code on your software to see that it works.",
        "How this is carried out will vary depending on your software."
    ]
}