{
    "title": "How to Program in C++ and Batch",
    "url": "https://www.wikihow.com/Program-in-C%2B%2B-and-Batch",
    "category_hierarchy": [
        "Computers and Electronics",
        "Software",
        "Programming",
        "C Programming Languages"
    ],
    "methods": [
        {
            "name": "Getting Started with C++",
            "steps": [
                {
                    "headline": "Introduce yourself to C++ language.",
                    "description": "C++ is related to C programming language. Unlike its predecessor, C++ is an object-oriented programming language. The object is the primary unit of this language\u2014every object has specific properties, functions, and methods."
                },
                {
                    "headline": "Download and install a compiler.",
                    "description": "In order to create viable programs with C++, you will need to download and install a compiler. Compilers transform your code into operational programs. There are free compilers available for Windows, Mac, and Linux users. Windows: Code::Blocks\n\nMac: Xcode\n\nLinux: g++."
                },
                {
                    "headline": "Find useful introductory resources and tutorials.",
                    "description": "Learning C++ is equivalent to learning a foreign language. Books, courses, and tutorials will help you establish a foundational understanding of this programming language. You will find a variety of free and purchasable resources online. Consult a comprehensive list of books and guides. Enroll in a C++ programming course. You may find courses at your local college, library, adult education center, and/or online. You could even join a MOOC (Massive Open Online Course). Complete a step-by-step tutorial. You can work your way through free tutorials or subscribe to a tutorial service, like Khan Academy or Lynda."
                }
            ]
        },
        {
            "name": "Creating a Basic C++ Program",
            "steps": [
                {
                    "headline": "Launch your compiler and create a new C++ project.",
                    "description": ""
                },
                {
                    "headline": "Select \u2019\u2019main.cpp.\u2019\u2019",
                    "description": ""
                },
                {
                    "headline": "Write a \u201cHello World\u201d program.",
                    "description": "Traditionally, the first program people create simply reads \u201cHello World!\u201d. When you create a new C++ project, the \u201cHello World!\u201d program will automatically appear in the file. Erase the existing code and rewrite it for yourself:\n\n#include <iostream>\nusing namespace std;\n//main () is where program execution begins. int main ()\n{\n\tcout <<\u201dHello World\u201d; //prints Hello World\n\treturn 0;\n}"
                },
                {
                    "headline": "Understand the meaning of \u201c#include <iostream>.\u201d This line of code appears in the file\u2019s header.",
                    "description": "The directive \u201c#include\u201d tells the program to include the file \u201c<iostream>\u201d in the current source file. Your C++ programs will not \"compile\" without this code"
                },
                {
                    "headline": "Understand the meaning of \u201cusing namespace std;.\u201d This line of code tells the compiler to use the standard C++ library.",
                    "description": "The standard C++ library is a collection of common functions and classes."
                },
                {
                    "headline": "Understand comments.",
                    "description": "Programmers use comments to annotate their code so that they (or anyone else reading the code) can understand more about what a particular section of code is meant to do. Comments appear in the code text but do not affect the program. In the \"Hello world\" program, \"//main () is where program execution begins\" is an example of a single line comment. Single line comments always begin with \"//\" and stop when the line ends."
                },
                {
                    "headline": "Understand the program\u2019s function.",
                    "description": "In C++, functions execute individual tasks. In the \u201cHello World\u201d program, int main() is the main function. Program execution begins at this line of code. The statements inside the brackets describe the actual function. The statement cout << \"Hello World\"; generates the words \u201cHello World\u201d on your screen. The statement return 0; terminates, or ends, the main function."
                }
            ]
        },
        {
            "name": "Exploring Batch Files",
            "steps": [
                {
                    "headline": "Understand batch files.",
                    "description": "Batch files are exclusive to Windows\u2014the Mac counterpart is a bash file. Batch files contain a one or more commands that are executed in sequence by a command line interpreter. These files are used to simplify basic and/or repetitive jobs such as opening multiple programs, deleting files, and backing up files. You may incorporate batch files into your C++ programs."
                },
                {
                    "headline": "Create a batch file.",
                    "description": "Batch files are simple text files. You may create your batch files with Window\u2019s text editor, Notepad.exe. Click Start and type \u201cnotepad\u201d into the search bar, and select \u201cNotepad\u201d from the results."
                },
                {
                    "headline": "Save the file.",
                    "description": "Click File > Save. Rename your file \u201cHelloWorld.cmd.\u201d Change the \u201cSave as type\u201d to \u201cAll Files (*,*).\u201d\nIf you are using a modern version of Windows, use the extension .cmd. If you are using an older system, use the extension .bat."
                },
                {
                    "headline": "Code a \u201cHello world\u201d batch file.",
                    "description": "In the text editor, enter in the following lines of code:\n\n@echo Hello world. @pause"
                },
                {
                    "headline": "Understand \u201c@echo.\u201d In batch, commands are echoed, or displayed, on the output screen by default.",
                    "description": "When a program runs, you will see the command and its output. Preceding this command with an \"@\" turns off echoing for a specific line. When the program runs, you will only see \"Hello world.\" You can turn of all echoing with the command \u201c@echo OFF.\u201d If you use this command, you can rewrite the program as: \n\n@echo Off\necho Hello world. pause"
                },
                {
                    "headline": "Understand \u201c@pause.\u201d This command tells the command line processor to pause until the user presses a key on the keyboard.",
                    "description": ""
                },
                {
                    "headline": "Run your batch file.",
                    "description": "The fastest way to run your batch file is to simply double-click on the file. When you double-click on the file, the batch file is sent to the DOS command line processor. A new window will open and your batch file will close. Once the user presses a key to continue, the program will end and the window will close."
                }
            ]
        },
        {
            "name": "Applying Your New Knowledge",
            "steps": [
                {
                    "headline": "Incorporate functions into your code.",
                    "description": "A  function is a group of statements, or instructions, that perform a specific task. Each function is assigned a type, a name, parameter(s), and statements. You will use the C++ function \u201csystem\u201d to run a batch file. To explore functions, try coding this program:\n\n// function example\n#include <iostream>\nUsing namespace std;\nint addition (int a, int b)\n{\n\tint r;\n\tr=a+b\n\treturn r;\n}\n\nint main ( )\n{\n\tint z;\n\tz = addition (5,3);\n\tcout << \u201cThe result is \u201c << z;\n}\n\n\nThis program contains two functions: \u2018\u2019addition\u2019\u2019 and \u2018\u2019main\u2019\u2019. The compiler will always call \u2018\u2019\u2019main\u2019\u2019 first\u2014in this program it will call the variable \u201cz\u201d of type \u201cint\u2019\u2019. The call will pass along two values, 5 and 3, to the \u201c\u2018addition\u201d\u2019 function. These values correspond to the parameters declared by the \u201caddition\u201d function\u2014\u201cint a, int b\u201d. Inside the \u201caddition\u201d function, there is a third variable: \u201c(int r)\u201d, that is directly related to the expression r=a+b. The two values from the \u201cmain\u201d function, 5 and 3, will be added together to equal \u201cr.\u201d In this instance, r equals 8. The final statement, \u201creturn r;\u201d ends the \u201caddition\u201d function and returns control to the \u201cmain\u201d function. Since \u201creturn\u201d has a variable, \u201cr,\u201d the call to return to \u201cmain\u201d is evaluated as a specific value and sends this variable to the \u201cmain\u201d function. The \u201cmain\u201d function resumes where it left off when it was called to \u201caddition\u201d: \u201ccout << \u201cThe result is \u201c << z;.\u201d This line of code prints \u201cThe result is 8\u201d on the screen."
                },
                {
                    "headline": "Experiment with flow control statements.",
                    "description": "Statements are individual instructions that are always executed in sequential order. C++ programs, however, are not limited to linear sequences. You may incorporate flow control statements to alter the path of your program. The \u201cwhile loop\u201d statement is a common flow control statement\u2014it tells the program to execute a statement a specific number of times or while the condition is fulfilled. // custom countdown using while\n#include <iostream>\nusing namespace std;\n\nint main ()\n{\n\tint n = 10;\n\n\twhile (n>0) \n{\n    \t\tcout << n << \", \";\n   \t\t --n;\n}\n\n  \tcout << \"liftoff!\\n\";\n}\n\n\n\u201cint n= 10\u201d: This line of code sets the variable \u201cn\u201d to 10. 10 is the first number in the countdown. \u201cwhile (n>0)\u201d: The loop will continue as long as the value of \u201cn\u201d is greater than 0. If the condition is true, the program executes the the following code: \u201ccout << n << \", \"; --n;\u201d. The number \u201c10\u201d will appear on the screen. Each time the loop is executed, the number \u201cn minus 1\u201d will appear on the screen. \u201ccout << \"liftoff!\\n\";\u201d: When the statement is no longer true\u2014when \u201cn\u201d equals \u201c0\u201d\u2014the phrase \u201cliftoff!\u201d will appear on the screen."
                },
                {
                    "headline": "Run a batch file with C++.",
                    "description": "When you run a batch file with your C++ program, you will use the \u201csystem ( )\u201d function. The \u201csystem\u201d function tells the command line processor to execute a command. Enter the batch file\u2019s name within the parentheses of the \u201csystem ( )\u201d function. source(HelloWorld.cmd)"
                }
            ]
        }
    ],
    "tyn": [
        "C++ compiler"
    ],
    "text": " Getting Started with C++ Introduce yourself to C++ language. C++ is related to C programming language. Unlike its predecessor, C++ is an object-oriented programming language. The object is the primary unit of this language\u2014every object has specific properties, functions, and methods. Download and install a compiler. In order to create viable programs with C++, you will need to download and install a compiler. Compilers transform your code into operational programs. There are free compilers available for Windows, Mac, and Linux users. Windows: Code::Blocks\n\nMac: Xcode\n\nLinux: g++. Find useful introductory resources and tutorials. Learning C++ is equivalent to learning a foreign language. Books, courses, and tutorials will help you establish a foundational understanding of this programming language. You will find a variety of free and purchasable resources online. Consult a comprehensive list of books and guides. Enroll in a C++ programming course. You may find courses at your local college, library, adult education center, and/or online. You could even join a MOOC (Massive Open Online Course). Complete a step-by-step tutorial. You can work your way through free tutorials or subscribe to a tutorial service, like Khan Academy or Lynda. Creating a Basic C++ Program Launch your compiler and create a new C++ project.  Select \u2019\u2019main.cpp.\u2019\u2019  Write a \u201cHello World\u201d program. Traditionally, the first program people create simply reads \u201cHello World!\u201d. When you create a new C++ project, the \u201cHello World!\u201d program will automatically appear in the file. Erase the existing code and rewrite it for yourself:\n\n#include <iostream>\nusing namespace std;\n//main () is where program execution begins. int main ()\n{\n\tcout <<\u201dHello World\u201d; //prints Hello World\n\treturn 0;\n} Understand the meaning of \u201c#include <iostream>.\u201d This line of code appears in the file\u2019s header. The directive \u201c#include\u201d tells the program to include the file \u201c<iostream>\u201d in the current source file. Your C++ programs will not \"compile\" without this code Understand the meaning of \u201cusing namespace std;.\u201d This line of code tells the compiler to use the standard C++ library. The standard C++ library is a collection of common functions and classes. Understand comments. Programmers use comments to annotate their code so that they (or anyone else reading the code) can understand more about what a particular section of code is meant to do. Comments appear in the code text but do not affect the program. In the \"Hello world\" program, \"//main () is where program execution begins\" is an example of a single line comment. Single line comments always begin with \"//\" and stop when the line ends. Understand the program\u2019s function. In C++, functions execute individual tasks. In the \u201cHello World\u201d program, int main() is the main function. Program execution begins at this line of code. The statements inside the brackets describe the actual function. The statement cout << \"Hello World\"; generates the words \u201cHello World\u201d on your screen. The statement return 0; terminates, or ends, the main function. Exploring Batch Files Understand batch files. Batch files are exclusive to Windows\u2014the Mac counterpart is a bash file. Batch files contain a one or more commands that are executed in sequence by a command line interpreter. These files are used to simplify basic and/or repetitive jobs such as opening multiple programs, deleting files, and backing up files. You may incorporate batch files into your C++ programs. Create a batch file. Batch files are simple text files. You may create your batch files with Window\u2019s text editor, Notepad.exe. Click Start and type \u201cnotepad\u201d into the search bar, and select \u201cNotepad\u201d from the results. Save the file. Click File > Save. Rename your file \u201cHelloWorld.cmd.\u201d Change the \u201cSave as type\u201d to \u201cAll Files (*,*).\u201d\nIf you are using a modern version of Windows, use the extension .cmd. If you are using an older system, use the extension .bat. Code a \u201cHello world\u201d batch file. In the text editor, enter in the following lines of code:\n\n@echo Hello world. @pause Understand \u201c@echo.\u201d In batch, commands are echoed, or displayed, on the output screen by default. When a program runs, you will see the command and its output. Preceding this command with an \"@\" turns off echoing for a specific line. When the program runs, you will only see \"Hello world.\" You can turn of all echoing with the command \u201c@echo OFF.\u201d If you use this command, you can rewrite the program as: \n\n@echo Off\necho Hello world. pause Understand \u201c@pause.\u201d This command tells the command line processor to pause until the user presses a key on the keyboard.  Run your batch file. The fastest way to run your batch file is to simply double-click on the file. When you double-click on the file, the batch file is sent to the DOS command line processor. A new window will open and your batch file will close. Once the user presses a key to continue, the program will end and the window will close. Applying Your New Knowledge Incorporate functions into your code. A  function is a group of statements, or instructions, that perform a specific task. Each function is assigned a type, a name, parameter(s), and statements. You will use the C++ function \u201csystem\u201d to run a batch file. To explore functions, try coding this program:\n\n// function example\n#include <iostream>\nUsing namespace std;\nint addition (int a, int b)\n{\n\tint r;\n\tr=a+b\n\treturn r;\n}\n\nint main ( )\n{\n\tint z;\n\tz = addition (5,3);\n\tcout << \u201cThe result is \u201c << z;\n}\n\n\nThis program contains two functions: \u2018\u2019addition\u2019\u2019 and \u2018\u2019main\u2019\u2019. The compiler will always call \u2018\u2019\u2019main\u2019\u2019 first\u2014in this program it will call the variable \u201cz\u201d of type \u201cint\u2019\u2019. The call will pass along two values, 5 and 3, to the \u201c\u2018addition\u201d\u2019 function. These values correspond to the parameters declared by the \u201caddition\u201d function\u2014\u201cint a, int b\u201d. Inside the \u201caddition\u201d function, there is a third variable: \u201c(int r)\u201d, that is directly related to the expression r=a+b. The two values from the \u201cmain\u201d function, 5 and 3, will be added together to equal \u201cr.\u201d In this instance, r equals 8. The final statement, \u201creturn r;\u201d ends the \u201caddition\u201d function and returns control to the \u201cmain\u201d function. Since \u201creturn\u201d has a variable, \u201cr,\u201d the call to return to \u201cmain\u201d is evaluated as a specific value and sends this variable to the \u201cmain\u201d function. The \u201cmain\u201d function resumes where it left off when it was called to \u201caddition\u201d: \u201ccout << \u201cThe result is \u201c << z;.\u201d This line of code prints \u201cThe result is 8\u201d on the screen. Experiment with flow control statements. Statements are individual instructions that are always executed in sequential order. C++ programs, however, are not limited to linear sequences. You may incorporate flow control statements to alter the path of your program. The \u201cwhile loop\u201d statement is a common flow control statement\u2014it tells the program to execute a statement a specific number of times or while the condition is fulfilled. // custom countdown using while\n#include <iostream>\nusing namespace std;\n\nint main ()\n{\n\tint n = 10;\n\n\twhile (n>0) \n{\n    \t\tcout << n << \", \";\n   \t\t --n;\n}\n\n  \tcout << \"liftoff!\\n\";\n}\n\n\n\u201cint n= 10\u201d: This line of code sets the variable \u201cn\u201d to 10. 10 is the first number in the countdown. \u201cwhile (n>0)\u201d: The loop will continue as long as the value of \u201cn\u201d is greater than 0. If the condition is true, the program executes the the following code: \u201ccout << n << \", \"; --n;\u201d. The number \u201c10\u201d will appear on the screen. Each time the loop is executed, the number \u201cn minus 1\u201d will appear on the screen. \u201ccout << \"liftoff!\\n\";\u201d: When the statement is no longer true\u2014when \u201cn\u201d equals \u201c0\u201d\u2014the phrase \u201cliftoff!\u201d will appear on the screen. Run a batch file with C++. When you run a batch file with your C++ program, you will use the \u201csystem ( )\u201d function. The \u201csystem\u201d function tells the command line processor to execute a command. Enter the batch file\u2019s name within the parentheses of the \u201csystem ( )\u201d function. source(HelloWorld.cmd)",
    "sentences": [
        " Getting Started with C++ Introduce yourself to C++ language.",
        "C++ is related to C programming language.",
        "Unlike its predecessor, C++ is an object-oriented programming language.",
        "The object is the primary unit of this language\u2014every object has specific properties, functions, and methods.",
        "Download and install a compiler.",
        "In order to create viable programs with C++, you will need to download and install a compiler.",
        "Compilers transform your code into operational programs.",
        "There are free compilers available for Windows, Mac, and Linux users.",
        "Windows: Code::Blocks\n\nMac: Xcode\n\nLinux: g++.",
        "Find useful introductory resources and tutorials.",
        "Learning C++ is equivalent to learning a foreign language.",
        "Books, courses, and tutorials will help you establish a foundational understanding of this programming language.",
        "You will find a variety of free and purchasable resources online.",
        "Consult a comprehensive list of books and guides.",
        "Enroll in a C++ programming course.",
        "You may find courses at your local college, library, adult education center, and/or online.",
        "You could even join a MOOC (Massive Open Online Course).",
        "Complete a step-by-step tutorial.",
        "You can work your way through free tutorials or subscribe to a tutorial service, like Khan Academy or Lynda.",
        "Creating a Basic C++ Program Launch your compiler and create a new C++ project.",
        "Select \u2019\u2019main.cpp.\u2019\u2019  Write a \u201cHello World\u201d program.",
        "Traditionally, the first program people create simply reads \u201cHello World!\u201d.",
        "When you create a new C++ project, the \u201cHello World!\u201d program will automatically appear in the file.",
        "Erase the existing code and rewrite it for yourself:\n\n#include <iostream>\nusing namespace std;\n//main () is where program execution begins.",
        "int main ()\n{\n\tcout <<\u201dHello World\u201d; //prints Hello World\n\treturn 0;\n} Understand the meaning of \u201c#include <iostream>.\u201d This line of code appears in the file\u2019s header.",
        "The directive \u201c#include\u201d tells the program to include the file \u201c<iostream>\u201d in the current source file.",
        "Your C++ programs will not \"compile\" without this code Understand the meaning of \u201cusing namespace std;.\u201d This line of code tells the compiler to use the standard C++ library.",
        "The standard C++ library is a collection of common functions and classes.",
        "Understand comments.",
        "Programmers use comments to annotate their code so that they (or anyone else reading the code) can understand more about what a particular section of code is meant to do.",
        "Comments appear in the code text but do not affect the program.",
        "In the \"Hello world\" program, \"//main () is where program execution begins\" is an example of a single line comment.",
        "Single line comments always begin with \"//\" and stop when the line ends.",
        "Understand the program\u2019s function.",
        "In C++, functions execute individual tasks.",
        "In the \u201cHello World\u201d program, int main() is the main function.",
        "Program execution begins at this line of code.",
        "The statements inside the brackets describe the actual function.",
        "The statement cout << \"Hello World\"; generates the words \u201cHello World\u201d on your screen.",
        "The statement return 0; terminates, or ends, the main function.",
        "Exploring Batch Files Understand batch files.",
        "Batch files are exclusive to Windows\u2014the Mac counterpart is a bash file.",
        "Batch files contain a one or more commands that are executed in sequence by a command line interpreter.",
        "These files are used to simplify basic and/or repetitive jobs such as opening multiple programs, deleting files, and backing up files.",
        "You may incorporate batch files into your C++ programs.",
        "Create a batch file.",
        "Batch files are simple text files.",
        "You may create your batch files with Window\u2019s text editor, Notepad.exe.",
        "Click Start and type \u201cnotepad\u201d into the search bar, and select \u201cNotepad\u201d from the results.",
        "Save the file.",
        "Click File > Save.",
        "Rename your file \u201cHelloWorld.cmd.\u201d Change the \u201cSave as type\u201d to \u201cAll Files (*,*).\u201d\nIf you are using a modern version of Windows, use the extension .cmd.",
        "If you are using an older system, use the extension .bat.",
        "Code a \u201cHello world\u201d batch file.",
        "In the text editor, enter in the following lines of code:\n\n@echo Hello world.",
        "@pause Understand \u201c@echo.\u201d In batch, commands are echoed, or displayed, on the output screen by default.",
        "When a program runs, you will see the command and its output.",
        "Preceding this command with an \"@\" turns off echoing for a specific line.",
        "When the program runs, you will only see \"Hello world.\"",
        "You can turn of all echoing with the command \u201c@echo OFF.\u201d If you use this command, you can rewrite the program as: \n\n@echo Off\necho Hello world.",
        "pause Understand \u201c@pause.\u201d This command tells the command line processor to pause until the user presses a key on the keyboard.",
        "Run your batch file.",
        "The fastest way to run your batch file is to simply double-click on the file.",
        "When you double-click on the file, the batch file is sent to the DOS command line processor.",
        "A new window will open and your batch file will close.",
        "Once the user presses a key to continue, the program will end and the window will close.",
        "Applying Your New Knowledge Incorporate functions into your code.",
        "A  function is a group of statements, or instructions, that perform a specific task.",
        "Each function is assigned a type, a name, parameter(s), and statements.",
        "You will use the C++ function \u201csystem\u201d to run a batch file.",
        "To explore functions, try coding this program:\n\n// function example\n#include <iostream>\nUsing namespace std;\nint addition (int a, int b)\n{\n\tint r;\n\tr=a+b\n\treturn r;\n}\n\nint main ( )\n{\n\tint z;\n\tz = addition (5,3);\n\tcout << \u201cThe result is \u201c << z;\n}\n\n\nThis program contains two functions: \u2018\u2019addition\u2019\u2019 and \u2018\u2019main\u2019\u2019.",
        "The compiler will always call \u2018\u2019\u2019main\u2019\u2019 first\u2014in this program it will call the variable \u201cz\u201d of type \u201cint\u2019\u2019.",
        "The call will pass along two values, 5 and 3, to the \u201c\u2018addition\u201d\u2019 function.",
        "These values correspond to the parameters declared by the \u201caddition\u201d function\u2014\u201cint a, int b\u201d.",
        "Inside the \u201caddition\u201d function, there is a third variable: \u201c(int r)\u201d, that is directly related to the expression r=a+b.",
        "The two values from the \u201cmain\u201d function, 5 and 3, will be added together to equal \u201cr.\u201d In this instance, r equals 8.",
        "The final statement, \u201creturn r;\u201d ends the \u201caddition\u201d function and returns control to the \u201cmain\u201d function.",
        "Since \u201creturn\u201d has a variable, \u201cr,\u201d the call to return to \u201cmain\u201d is evaluated as a specific value and sends this variable to the \u201cmain\u201d function.",
        "The \u201cmain\u201d function resumes where it left off when it was called to \u201caddition\u201d: \u201ccout << \u201cThe result is \u201c << z;.\u201d This line of code prints \u201cThe result is 8\u201d on the screen.",
        "Experiment with flow control statements.",
        "Statements are individual instructions that are always executed in sequential order.",
        "C++ programs, however, are not limited to linear sequences.",
        "You may incorporate flow control statements to alter the path of your program.",
        "The \u201cwhile loop\u201d statement is a common flow control statement\u2014it tells the program to execute a statement a specific number of times or while the condition is fulfilled.",
        "// custom countdown using while\n#include <iostream>\nusing namespace std;\n\nint main ()\n{\n\tint n = 10;\n\n\twhile (n>0) \n{\n    \t\tcout << n << \", \";\n   \t\t --n;\n}\n\n  \tcout << \"liftoff!\\n\";\n}\n\n\n\u201cint n= 10\u201d: This line of code sets the variable \u201cn\u201d to 10.",
        "10 is the first number in the countdown.",
        "\u201cwhile (n>0)\u201d: The loop will continue as long as the value of \u201cn\u201d is greater than 0.",
        "If the condition is true, the program executes the the following code: \u201ccout << n << \", \"; --n;\u201d.",
        "The number \u201c10\u201d will appear on the screen.",
        "Each time the loop is executed, the number \u201cn minus 1\u201d will appear on the screen.",
        "\u201ccout << \"liftoff!\\n\";\u201d: When the statement is no longer true\u2014when \u201cn\u201d equals \u201c0\u201d\u2014the phrase \u201cliftoff!\u201d will appear on the screen.",
        "Run a batch file with C++.",
        "When you run a batch file with your C++ program, you will use the \u201csystem ( )\u201d function.",
        "The \u201csystem\u201d function tells the command line processor to execute a command.",
        "Enter the batch file\u2019s name within the parentheses of the \u201csystem ( )\u201d function.",
        "source(HelloWorld.cmd)"
    ]
}