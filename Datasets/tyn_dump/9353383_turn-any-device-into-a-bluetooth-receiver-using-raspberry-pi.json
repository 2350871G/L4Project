{
    "title": "How to Turn Any Device Into a Bluetooth Receiver Using Raspberry Pi",
    "url": "https://www.wikihow.com/Turn-Any-Device-Into-a-Bluetooth-Receiver-Using-Raspberry-Pi",
    "category_hierarchy": [
        "Computers and Electronics",
        "Telephones"
    ],
    "steps": [
        {
            "headline": "Download the latest version of Raspbian from the Raspberry Pi website and have it saved to your desktop.",
            "description": "To get the file registered as an operating system, and not a zip file, you need to download win32 disk imager. Select the Raspbian file on your desktop as the image file, and select the removable disk as your device. Make sure the letter for the micro SD card is correct before you copy the file over so you don't overwrite the wrong drive. Once the image is finished copying over to the micro SD card, plug it into the Raspberry Pi and start it up."
        },
        {
            "headline": "Use the default username, pi, and the default password, raspberry once Raspberry Pi has booted.",
            "description": "Set up WiFi by either plugging in an Ethernet cable, or connect via WiFi by clicking on the icon at the top of the screen. Once you are finished setting up, you won't need WiFi anymore. The only reason you will need WiFi is to download the files."
        },
        {
            "headline": "Download the software needed for this to work.",
            "description": "In the command terminal, enter the code in line A and B. The code in line A downloads the latest version of the software. The code in line B allows Bluetooth to work with Pulseaudio, which is an open source program that acts as a server, allowing external inputs to broadcast sound to the device. Once the program is done downloading, we can start editing some config files to enable the Bluetooth. A. sudo apt-get upgrade\nB. sudo apt-get install bluez pulseaudio-module-bluetooth python-gobject python-gobject-2 bluez-tools"
        },
        {
            "headline": "Get ready to play music through the device by adding the user pi to pulse audio.",
            "description": "In the terminal, enter the code from line A. This allows you to edit the default bluetooth streaming settings. Next, enable A2DP in the bluetooth configuration. A2DP is is a type of bluetooth streaming that lets us connect to other A2DP devices. It is a higher quality bluetooth connection than others since it can send more data faster. Enter the code from line B to open the config file.In the config file, under the [General]: tab, enter the code from line C. Use CTRL+O and ENTER to save, and CTRL+X to close the config file. {\"smallUrl\":\"https:\\/\\/www.wikihow.com\\/images\\/d\\/d5\\/Step-4-Code.png\",\"bigUrl\":\"\\/images\\/thumb\\/d\\/d5\\/Step-4-Code.png\\/332px-Step-4-Code.png\",\"smallWidth\":460,\"smallHeight\":43,\"bigWidth\":\"332\",\"bigHeight\":\"31\",\"licensing\":\"<div class=\\\"mw-parser-output\\\"><p>Image by: Uploader<br>\\nLicense: <a rel=\\\"nofollow\\\" class=\\\"external text\\\" href=\\\"https:\\/\\/creativecommons.org\\/licenses\\/by\\/3.0\\/\\\">Creative Commons<\\/a>\\n<\\/p><\\/div>\"}\nA. sudo usermod \u2013a \u2013G lp pi\nB. sudo nano /etc/bluetooth/audio.conf\nC. Enable=Source,Sink,Media,Socket"
        },
        {
            "headline": "Modify the Pulse Daemon config file, which is the configuration file for Pulseaudio.",
            "description": "Enter the code from line A. You change the resampling method because you need to be able to convert the audio from different qualities so it can be used on your device. In the config file, look for the line resample-method = speex-float-3, and add  ; at the beginning of the line so it looks like the code in line B. Then add line C below line B. {\"smallUrl\":\"https:\\/\\/www.wikihow.com\\/images\\/3\\/33\\/Step-5-Code.png\",\"bigUrl\":\"\\/images\\/thumb\\/3\\/33\\/Step-5-Code.png\\/391px-Step-5-Code.png\",\"smallWidth\":460,\"smallHeight\":61,\"bigWidth\":\"391\",\"bigHeight\":\"52\",\"licensing\":\"<div class=\\\"mw-parser-output\\\"><p>Image by: Uploader<br>\\nLicense: <a rel=\\\"nofollow\\\" class=\\\"external text\\\" href=\\\"https:\\/\\/creativecommons.org\\/licenses\\/by\\/3.0\\/\\\">Creative Commons<\\/a>\\n<\\/p><\\/div>\"}\nA. sudo nano /etc/pulse/daemon.conf\nB. ;resample-method = speex-float-3\nC. resample-method = trivial"
        },
        {
            "headline": "To have our devices automatically connect, you will need to edit some more config files.",
            "description": "We need to edit the udev config files. In the terminal, enter the code from line A.Look for the lineSUBSYSTEM==\"input\", GROUP=\"input\", MODE=\"0660\"And under it, add the code from line B.Save your changes and exit the config file. Now you need to check and see if the udev/ directory exists by using the code from line C.If it does, move onto the next step, if not, enter the code from line D to create the directory.To fully get the bluetooth to work, you will have to copy the code from line E into a text editor and turn it into an executable file.Save and exit and then enter the code from line F. \nA. sudo nano /etc/udev/rules.d/99-input.rules\nB. KERNEL==\"input[0-9]*\", RUN+=\"/usr/lib/udev/bluetooth\"\nC. sudo ls \u2013la /usr/lib/udev\nD. sudo mkdir /usr/lib/udev\nE. AUDIOSINK=\"alsa_output.platform-bcm2835_AUD0.0.analog-stereo\"echo \"Executing bluetooth script...|$ACTION|\" >> /var/log/bluetooth_devACTION=$(expr \"$ACTION\" : \"\\([a-zA-Z]\\+\\). *\")if [ \"$ACTION\" = \"add\" ]thenhciconfig hci0 noscanamixer cset numid=3 1amixer set Master 100%pacmd set-sink-volume 0 65537   for dev in $(find /sys/devices/virtual/input/ -name input*)   do   if [ -f \"$dev/name\" ]   then      mac=$(cat \"$dev/name\" | sed 's/:/_/g')      bluez_dev=bluez_source.$mac      sleep 1      CONFIRM=`sudo -u pi pactl list short | grep $bluez_dev`      if [ ! -z \"$CONFIRM\" ]      then         echo \"Setting bluez_source to:  $bluez_dev\" >> /var/log/bluetooth_dev         echo pactl load-module module-loopback source=$bluez_dev sink=$AUDIOSINK rate=44100 adjust_time=0 >> /var/log/bluetooth_dev         sudo -u pi pactl load-module module-loopback source=$bluez_dev sink=$AUDIOSINK rate=44100 adjust_time=0 >> /var/log/bluetooth_dev      fi   fi   donefiif [ \"$ACTION\" = \"remove\" ]thensudo hciconfig hci0 piscanFi\nF. sudo chmod 774 /usr/lib/udev/bluetooth"
        },
        {
            "headline": "Create another script that turns on and off bluetooth discoverability when it starts up so we can connect our device to the Raspberry Pi.",
            "description": "First, in the terminal, enter the code from line A. Now open up the text editor to create a new script. In the text editor, enter the code from line B into the document. Save the script and exit the text editor. Give the text file execute permissions so it can be launched when it is used. Make this script start up when the Raspberry Pi boots up. To do this, we need to enter the lines of code from C and D. \nA. sudo nano /etc/init.d/bluetooth-agent\nB. USER=rootHOME=/rootexport USER HOMEcase \"$1\" instart)echo \"setting bluetooth discoverable\"sudo hciconfig hci0 piscanstart-stop-daemon -S -x /usr/bin/bluetooth-agent -c pi -b -- 0000echo \"bluetooth-agent started pw: 0000\";;stop)echo \"Stopping bluetooth-agent\"start-stop-daemon -K -x /usr/bin/bluetooth-agent;;*)echo \"Usage: /etc/init.d/bluetooth-agent {start|stop}\"exit 1;;esacexit 0\nC. sudo chmod 755 /etc/init.d/bluetooth-agent\nD. sudo update-rc.d bluetooth-agent defaults"
        },
        {
            "headline": "Go to the inittab config file.",
            "description": "Inittab is the file that tells the Raspberry Pi what to launch in certain situations, such as start up. To get to that config file, enter the code from line A And look for the following line of code1:2345:respawn:/sbin/getty 115200 tty1,add  # before it so it gets commented out and won't be read by the program. It should look like the code in line B. Below it, add the code from line C.Save and exit. Now just reboot Raspberry Pi and you are ready to go. A. sudo nano /etc/inittab\nB. #1:2345:respawn:/sbin/getty 115200 tty1\nC. 1:2345:respawn:/bin/login -f pi tty1 /dev/tty1 2>&1"
        }
    ],
    "tyn": [
        "Raspberry Pi 3 model B",
        "4GB micro SD card",
        "Portable Battery",
        "Rechargeable speakers with an AUX port",
        "Case"
    ],
    "text": " Download the latest version of Raspbian from the Raspberry Pi website and have it saved to your desktop. To get the file registered as an operating system, and not a zip file, you need to download win32 disk imager. Select the Raspbian file on your desktop as the image file, and select the removable disk as your device. Make sure the letter for the micro SD card is correct before you copy the file over so you don't overwrite the wrong drive. Once the image is finished copying over to the micro SD card, plug it into the Raspberry Pi and start it up. Use the default username, pi, and the default password, raspberry once Raspberry Pi has booted. Set up WiFi by either plugging in an Ethernet cable, or connect via WiFi by clicking on the icon at the top of the screen. Once you are finished setting up, you won't need WiFi anymore. The only reason you will need WiFi is to download the files. Download the software needed for this to work. In the command terminal, enter the code in line A and B. The code in line A downloads the latest version of the software. The code in line B allows Bluetooth to work with Pulseaudio, which is an open source program that acts as a server, allowing external inputs to broadcast sound to the device. Once the program is done downloading, we can start editing some config files to enable the Bluetooth. A. sudo apt-get upgrade\nB. sudo apt-get install bluez pulseaudio-module-bluetooth python-gobject python-gobject-2 bluez-tools Get ready to play music through the device by adding the user pi to pulse audio. In the terminal, enter the code from line A. This allows you to edit the default bluetooth streaming settings. Next, enable A2DP in the bluetooth configuration. A2DP is is a type of bluetooth streaming that lets us connect to other A2DP devices. It is a higher quality bluetooth connection than others since it can send more data faster. Enter the code from line B to open the config file.In the config file, under the [General]: tab, enter the code from line C. Use CTRL+O and ENTER to save, and CTRL+X to close the config file. {\"smallUrl\":\"https:\\/\\/www.wikihow.com\\/images\\/d\\/d5\\/Step-4-Code.png\",\"bigUrl\":\"\\/images\\/thumb\\/d\\/d5\\/Step-4-Code.png\\/332px-Step-4-Code.png\",\"smallWidth\":460,\"smallHeight\":43,\"bigWidth\":\"332\",\"bigHeight\":\"31\",\"licensing\":\"<div class=\\\"mw-parser-output\\\"><p>Image by: Uploader<br>\\nLicense: <a rel=\\\"nofollow\\\" class=\\\"external text\\\" href=\\\"https:\\/\\/creativecommons.org\\/licenses\\/by\\/3.0\\/\\\">Creative Commons<\\/a>\\n<\\/p><\\/div>\"}\nA. sudo usermod \u2013a \u2013G lp pi\nB. sudo nano /etc/bluetooth/audio.conf\nC. Enable=Source,Sink,Media,Socket Modify the Pulse Daemon config file, which is the configuration file for Pulseaudio. Enter the code from line A. You change the resampling method because you need to be able to convert the audio from different qualities so it can be used on your device. In the config file, look for the line resample-method = speex-float-3, and add  ; at the beginning of the line so it looks like the code in line B. Then add line C below line B. {\"smallUrl\":\"https:\\/\\/www.wikihow.com\\/images\\/3\\/33\\/Step-5-Code.png\",\"bigUrl\":\"\\/images\\/thumb\\/3\\/33\\/Step-5-Code.png\\/391px-Step-5-Code.png\",\"smallWidth\":460,\"smallHeight\":61,\"bigWidth\":\"391\",\"bigHeight\":\"52\",\"licensing\":\"<div class=\\\"mw-parser-output\\\"><p>Image by: Uploader<br>\\nLicense: <a rel=\\\"nofollow\\\" class=\\\"external text\\\" href=\\\"https:\\/\\/creativecommons.org\\/licenses\\/by\\/3.0\\/\\\">Creative Commons<\\/a>\\n<\\/p><\\/div>\"}\nA. sudo nano /etc/pulse/daemon.conf\nB. ;resample-method = speex-float-3\nC. resample-method = trivial To have our devices automatically connect, you will need to edit some more config files. We need to edit the udev config files. In the terminal, enter the code from line A.Look for the lineSUBSYSTEM==\"input\", GROUP=\"input\", MODE=\"0660\"And under it, add the code from line B.Save your changes and exit the config file. Now you need to check and see if the udev/ directory exists by using the code from line C.If it does, move onto the next step, if not, enter the code from line D to create the directory.To fully get the bluetooth to work, you will have to copy the code from line E into a text editor and turn it into an executable file.Save and exit and then enter the code from line F. \nA. sudo nano /etc/udev/rules.d/99-input.rules\nB. KERNEL==\"input[0-9]*\", RUN+=\"/usr/lib/udev/bluetooth\"\nC. sudo ls \u2013la /usr/lib/udev\nD. sudo mkdir /usr/lib/udev\nE. AUDIOSINK=\"alsa_output.platform-bcm2835_AUD0.0.analog-stereo\"echo \"Executing bluetooth script...|$ACTION|\" >> /var/log/bluetooth_devACTION=$(expr \"$ACTION\" : \"\\([a-zA-Z]\\+\\). *\")if [ \"$ACTION\" = \"add\" ]thenhciconfig hci0 noscanamixer cset numid=3 1amixer set Master 100%pacmd set-sink-volume 0 65537   for dev in $(find /sys/devices/virtual/input/ -name input*)   do   if [ -f \"$dev/name\" ]   then      mac=$(cat \"$dev/name\" | sed 's/:/_/g')      bluez_dev=bluez_source.$mac      sleep 1      CONFIRM=`sudo -u pi pactl list short | grep $bluez_dev`      if [ ! -z \"$CONFIRM\" ]      then         echo \"Setting bluez_source to:  $bluez_dev\" >> /var/log/bluetooth_dev         echo pactl load-module module-loopback source=$bluez_dev sink=$AUDIOSINK rate=44100 adjust_time=0 >> /var/log/bluetooth_dev         sudo -u pi pactl load-module module-loopback source=$bluez_dev sink=$AUDIOSINK rate=44100 adjust_time=0 >> /var/log/bluetooth_dev      fi   fi   donefiif [ \"$ACTION\" = \"remove\" ]thensudo hciconfig hci0 piscanFi\nF. sudo chmod 774 /usr/lib/udev/bluetooth Create another script that turns on and off bluetooth discoverability when it starts up so we can connect our device to the Raspberry Pi. First, in the terminal, enter the code from line A. Now open up the text editor to create a new script. In the text editor, enter the code from line B into the document. Save the script and exit the text editor. Give the text file execute permissions so it can be launched when it is used. Make this script start up when the Raspberry Pi boots up. To do this, we need to enter the lines of code from C and D. \nA. sudo nano /etc/init.d/bluetooth-agent\nB. USER=rootHOME=/rootexport USER HOMEcase \"$1\" instart)echo \"setting bluetooth discoverable\"sudo hciconfig hci0 piscanstart-stop-daemon -S -x /usr/bin/bluetooth-agent -c pi -b -- 0000echo \"bluetooth-agent started pw: 0000\";;stop)echo \"Stopping bluetooth-agent\"start-stop-daemon -K -x /usr/bin/bluetooth-agent;;*)echo \"Usage: /etc/init.d/bluetooth-agent {start|stop}\"exit 1;;esacexit 0\nC. sudo chmod 755 /etc/init.d/bluetooth-agent\nD. sudo update-rc.d bluetooth-agent defaults Go to the inittab config file. Inittab is the file that tells the Raspberry Pi what to launch in certain situations, such as start up. To get to that config file, enter the code from line A And look for the following line of code1:2345:respawn:/sbin/getty 115200 tty1,add  # before it so it gets commented out and won't be read by the program. It should look like the code in line B. Below it, add the code from line C.Save and exit. Now just reboot Raspberry Pi and you are ready to go. A. sudo nano /etc/inittab\nB. #1:2345:respawn:/sbin/getty 115200 tty1\nC. 1:2345:respawn:/bin/login -f pi tty1 /dev/tty1 2>&1",
    "sentences": [
        " Download the latest version of Raspbian from the Raspberry Pi website and have it saved to your desktop.",
        "To get the file registered as an operating system, and not a zip file, you need to download win32 disk imager.",
        "Select the Raspbian file on your desktop as the image file, and select the removable disk as your device.",
        "Make sure the letter for the micro SD card is correct before you copy the file over so you don't overwrite the wrong drive.",
        "Once the image is finished copying over to the micro SD card, plug it into the Raspberry Pi and start it up.",
        "Use the default username, pi, and the default password, raspberry once Raspberry Pi has booted.",
        "Set up WiFi by either plugging in an Ethernet cable, or connect via WiFi by clicking on the icon at the top of the screen.",
        "Once you are finished setting up, you won't need WiFi anymore.",
        "The only reason you will need WiFi is to download the files.",
        "Download the software needed for this to work.",
        "In the command terminal, enter the code in line A and B.",
        "The code in line A downloads the latest version of the software.",
        "The code in line B allows Bluetooth to work with Pulseaudio, which is an open source program that acts as a server, allowing external inputs to broadcast sound to the device.",
        "Once the program is done downloading, we can start editing some config files to enable the Bluetooth.",
        "A. sudo apt-get upgrade\nB. sudo apt-get install bluez pulseaudio-module-bluetooth python-gobject python-gobject-2 bluez-tools Get ready to play music through the device by adding the user pi to pulse audio.",
        "In the terminal, enter the code from line A.",
        "This allows you to edit the default bluetooth streaming settings.",
        "Next, enable A2DP in the bluetooth configuration.",
        "A2DP is is a type of bluetooth streaming that lets us connect to other A2DP devices.",
        "It is a higher quality bluetooth connection than others since it can send more data faster.",
        "Enter the code from line B to open the config file.In the config file, under the [General]: tab, enter the code from line C. Use CTRL+O and ENTER to save, and CTRL+X to close the config file.",
        "{\"smallUrl\":\"https:\\/\\/www.wikihow.com\\/images\\/d\\/d5\\/Step-4-Code.png\",\"bigUrl\":\"\\/images\\/thumb\\/d\\/d5\\/Step-4-Code.png\\/332px-Step-4-Code.png\",\"smallWidth\":460,\"smallHeight\":43,\"bigWidth\":\"332\",\"bigHeight\":\"31\",\"licensing\":\"<div class=\\\"mw-parser-output\\\"><p>Image by: Uploader<br>\\nLicense: <a rel=\\\"nofollow\\\" class=\\\"external text\\\" href=\\\"https:\\/\\/creativecommons.org\\/licenses\\/by\\/3.0\\/\\\">Creative Commons<\\/a>\\n<\\/p><\\/div>\"}\nA. sudo usermod \u2013a \u2013G lp pi\nB. sudo nano /etc/bluetooth/audio.conf\nC. Enable=Source,Sink,Media,Socket Modify the Pulse Daemon config file, which is the configuration file for Pulseaudio.",
        "Enter the code from line A.",
        "You change the resampling method because you need to be able to convert the audio from different qualities so it can be used on your device.",
        "In the config file, look for the line resample-method = speex-float-3, and add  ; at the beginning of the line so it looks like the code in line B.",
        "Then add line C below line B.",
        "{\"smallUrl\":\"https:\\/\\/www.wikihow.com\\/images\\/3\\/33\\/Step-5-Code.png\",\"bigUrl\":\"\\/images\\/thumb\\/3\\/33\\/Step-5-Code.png\\/391px-Step-5-Code.png\",\"smallWidth\":460,\"smallHeight\":61,\"bigWidth\":\"391\",\"bigHeight\":\"52\",\"licensing\":\"<div class=\\\"mw-parser-output\\\"><p>Image by: Uploader<br>\\nLicense: <a rel=\\\"nofollow\\\" class=\\\"external text\\\" href=\\\"https:\\/\\/creativecommons.org\\/licenses\\/by\\/3.0\\/\\\">Creative Commons<\\/a>\\n<\\/p><\\/div>\"}\nA. sudo nano /etc/pulse/daemon.conf\nB. ;resample-method = speex-float-3\nC. resample-method = trivial To have our devices automatically connect, you will need to edit some more config files.",
        "We need to edit the udev config files.",
        "In the terminal, enter the code from line A.Look for the lineSUBSYSTEM==\"input\", GROUP=\"input\", MODE=\"0660\"And under it, add the code from line B.Save your changes and exit the config file.",
        "Now you need to check and see if the udev/ directory exists by using the code from line C.If it does, move onto the next step, if not, enter the code from line D to create the directory.To fully get the bluetooth to work, you will have to copy the code from line E into a text editor and turn it into an executable file.Save and exit and then enter the code from line F. \nA. sudo nano /etc/udev/rules.d/99-input.rules\nB. KERNEL==\"input[0-9]*\", RUN+=\"/usr/lib/udev/bluetooth\"\nC. sudo ls \u2013la /usr/lib/udev\nD. sudo mkdir /usr/lib/udev\nE. AUDIOSINK=\"alsa_output.platform-bcm2835_AUD0.0.analog-stereo\"echo \"Executing bluetooth script...|$ACTION|\" >> /var/log/bluetooth_devACTION=$(expr \"$ACTION\" : \"\\([a-zA-Z]\\+\\).",
        "*\")if [ \"$ACTION\" = \"add\" ]thenhciconfig hci0 noscanamixer cset numid=3 1amixer set Master 100%pacmd set-sink-volume 0 65537   for dev in $(find /sys/devices/virtual/input/ -name input*)   do   if [ -f \"$dev/name\" ]   then      mac=$(cat \"$dev/name\" | sed 's/:/_/g')      bluez_dev=bluez_source.$mac      sleep 1      CONFIRM=`sudo -u pi pactl list short | grep $bluez_dev`      if [ !",
        "-z \"$CONFIRM\" ]      then         echo \"Setting bluez_source to:  $bluez_dev\" >> /var/log/bluetooth_dev         echo pactl load-module module-loopback source=$bluez_dev sink=$AUDIOSINK rate=44100 adjust_time=0 >> /var/log/bluetooth_dev         sudo -u pi pactl load-module module-loopback source=$bluez_dev sink=$AUDIOSINK rate=44100 adjust_time=0 >> /var/log/bluetooth_dev      fi   fi   donefiif [ \"$ACTION\" = \"remove\" ]thensudo hciconfig hci0 piscanFi\nF. sudo chmod 774 /usr/lib/udev/bluetooth Create another script that turns on and off bluetooth discoverability when it starts up so we can connect our device to the Raspberry Pi.",
        "First, in the terminal, enter the code from line A.",
        "Now open up the text editor to create a new script.",
        "In the text editor, enter the code from line B into the document.",
        "Save the script and exit the text editor.",
        "Give the text file execute permissions so it can be launched when it is used.",
        "Make this script start up when the Raspberry Pi boots up.",
        "To do this, we need to enter the lines of code from C and D. \nA. sudo nano /etc/init.d/bluetooth-agent\nB. USER=rootHOME=/rootexport USER HOMEcase \"$1\" instart)echo \"setting bluetooth discoverable\"sudo hciconfig hci0 piscanstart-stop-daemon -S -x /usr/bin/bluetooth-agent -c pi -b -- 0000echo \"bluetooth-agent started pw: 0000\";;stop)echo \"Stopping bluetooth-agent\"start-stop-daemon -K -x /usr/bin/bluetooth-agent;;*)echo \"Usage: /etc/init.d/bluetooth-agent {start|stop}\"exit 1;;esacexit 0\nC. sudo chmod 755 /etc/init.d/bluetooth-agent\nD. sudo update-rc.d bluetooth-agent defaults Go to the inittab config file.",
        "Inittab is the file that tells the Raspberry Pi what to launch in certain situations, such as start up.",
        "To get to that config file, enter the code from line A And look for the following line of code1:2345:respawn:/sbin/getty 115200 tty1,add  # before it so it gets commented out and won't be read by the program.",
        "It should look like the code in line B.",
        "Below it, add the code from line C.Save and exit.",
        "Now just reboot Raspberry Pi and you are ready to go.",
        "A. sudo nano /etc/inittab\nB.",
        "#1:2345:respawn:/sbin/getty 115200 tty1\nC. 1:2345:respawn:/bin/login -f pi tty1 /dev/tty1 2>&1"
    ]
}